Это тот редкий случай, когда решение проще записать в виде псевдокода.<br>
<br><code>
<b>FindBug(Node* root)</b>:<br>
&emsp;&emsp;&emsp;&emsp;Если граф &#8212; дерево, то бракованное реле находится перед<br>
&emsp;&emsp;&emsp;&emsp;первой (от корня) не горящей лампочкой.<br>
&emsp;&emsp;&emsp;&emsp;Если такого нет, отключаем все ребра графа. <b>Return</b>.<br>
&emsp;&emsp;&emsp;&emsp;Отключаем все ребра, выходящие из <b>root</b>.<br>
&emsp;&emsp;&emsp;&emsp;<b>for</b> (ребра <b>j</b>, выходящие из корня):<br>
&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Включаем <b>j</b><br>
&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Его другой конец обозначим через <b>new_root</b>.<br>
&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<b>FindBug(new_root)</b>. Если успешно &#8212; <b>return</b>.<br>
&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;Выключаем <b>j</b>.<br>
</code><br>
<i>Важное замечание.</i> После выхода из <b>FindBug</b> все ребра в обработанном подграфе оказываются отключены и не мешают в дальнейшем.<br><br>
Оценим время работы алгоритма. Пусть <script type="math/tex">S_n</script> &#8212; максимальная сложность <b>FindBug</b> для графа с <script type="math/tex">n</script> ребрами. Пусть, далее, <script type="math/tex">j_1 \ldots j_t</script> &#8212; все ребра, 
выходящие из источника. В худшем случае нам пришлось включить и выключить каждое из ребер <script type="math/tex">j_1 \ldots j_t</script> и запустить процедуру <b>FindBug</b> для каждого из них.<br>
Тогда
<script type="math/tex; mode=display">S_n \leqslant 2t + S_{k_1} + S_{k_2} + \cdots + S_{k_t},</script>
где <script type="math/tex">k_1 + k_2 + \cdots + k_t = n-t.</script><br>
Нетрудно видеть, что <script type="math/tex">S_1=S_2=0</script>, <script type="math/tex">S_3=1</script>. В любом случае, <script type="math/tex">S_m \leqslant 2m</script> при <script type="math/tex">m=1,2,3</script>.<br>
Примем это за рабочую гипотезу. По индукции тогда можно заключить, что
<script type="math/tex; mode=display">
\begin{align*}
S_n &\leqslant 2t + S_{k_1} + S_{k_2} + \cdots + S_{k_t} \leqslant 2t + 2k_1 + 2k_2 + \cdots + 2k_t\\
&= 2t + 2(k_1 + k_2 + \cdots + k_t) = 2t + 2(n-t) = 2n,
\end{align*}
</script>
что и требовалось доказать.
