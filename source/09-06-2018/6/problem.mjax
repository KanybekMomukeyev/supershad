Назовем элемент прямоугольной матрицы <i>седлом</i>, если он является наибольшим в своей строке и наименьшим в своем столбце или наоборот. Придумайте алгоритм, за <script type="math/tex">O(nm)</script> операций находящий все седла в матрице <script type="math/tex">\text{A[1}\,\text{.}\,\text{.}\,\text{n][1}\,\text{.}\,\text{.}\,\text{m]}</script>, использующий не более <script type="math/tex">O(n+m)</script> памяти и не более <script type="math/tex">1</script> раза обращающийся к каждому элементу <script type="math/tex">\text{A}</script> (можете считать, что элемент <script type="math/tex">\text{A[i][j]}</script> превращается в <script type="math/tex">\text{NaN}</script> сразу после вызова <script type="math/tex">\text{A[i][j]}</script>). Считайте, что все элементы матрицы различны.
